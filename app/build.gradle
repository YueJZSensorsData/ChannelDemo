apply plugin: 'com.android.application'

//添加 com.sensorsdata.analytics.android 插件
apply plugin: 'com.sensorsdata.analytics.android'
//生成打包时间
def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.sensors.channeldemo"
        minSdkVersion 28
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //多渠道打包配置
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "${variant.name}-${variant.versionName}-${releaseTime()}.apk"
                }
            }

        }

        debug{
//            versionNameSuffix "-debug"                       //包名后缀为“-debug”
            minifyEnabled false                              //是否混淆
            zipAlignEnabled false                            //Zipalign优化
        }
    }

    flavorDimensions "yingyongbao"

    // 渠道配置
    productFlavors {
        yingyongbao {}
        wandoujia {}
        _360 {}
        baidu {}
        xiaomi {}
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [DOWNLOAD_CHANNEL: name]  //动态地修改AndroidManifest中的渠道名
    }
}

//在 Project 配置结束后调用
this.afterEvaluate { Project project ->
    //需要特殊配置的渠道
    def channelName = "yingyongbao"
    def allTask =  project.tasks.getNames()
    //测试发现，渠道是yingyongbao，但是会执行
    // transformClassesWithSensorsAnalyticsAutoTrackForYingyongbaoRelease 这样名称的任务，
    // 所以需要对大小写进行处理
    allTask.each { taskName ->
        if (taskName.toUpperCase().contains("transformClassesWithSensorsAnalyticsAutoTrackFor".toUpperCase() + channelName.toUpperCase())) {
            def preBuildTask = project.tasks.getByName(taskName)
            //开始任务之前的配置
            preBuildTask.doFirst {
                println("preBuildTaskdoFirst" + channelName)
                sensorsAnalytics {
                    sdk {
                        disableIMEI = true
                    }
                }
            }
            //任务结束之后的配置，防止影响其它任务
            preBuildTask.doLast {
                println("preBuildTaskdoLast" + channelName)
                sensorsAnalytics {
                    sdk {
                        disableIMEI = false
                    }
                }
            }
        }
    }
 }





dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //添加 Sensors Analytics SDK 依赖
    implementation 'com.sensorsdata.analytics.android:SensorsAnalyticsSDK:3.1.4'
}
